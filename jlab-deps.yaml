services:
  kafka:
    extends:
      file: deps.yaml
      service: kafka

  registry:
    extends:
      file: deps.yaml
      service: registry

  jaws:
    extends:
      file: deps.yaml
      service: jaws
    environment:
      - ALARM_INSTANCES=https://raw.githubusercontent.com/JeffersonLab/alarms/main/instances
      - ALARM_INSTANCES_URL_CSV=aperture,bcm,beamdump,bels,blm,box,bpm,camac,crates,cryo,dempow,gun,harp,helicity,ioc,ion,laser,lcw,misc,mo,odh,radcon,rf,rfsep,trim,vacuum

  effective:
    extends:
      file: deps.yaml
      service: effective

  oracle:
    extends:
      file: deps.yaml
      service: oracle

  keycloak:
    extends:
      file: deps.yaml
      service: keycloak

  epics2kafka:
    image: jeffersonlab/jaws-epics2kafka:4.7.0
    hostname: epics2kafka
    container_name: epics2kafka
    healthcheck:
      test: test $(/scripts/show-status.sh | grep RUNNING | wc -l) -eq 2
      start_period: 30s
      start_interval: 5s
      #      interval: 30s      # waiting for https://github.com/docker/compose/issues/10830
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      jaws:
        condition: service_healthy
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
    volumes:
      - ./container/epics2kafka/initdb.d:/config

  registrations2epics:
    image: jeffersonlab/jaws-registrations2epics:4.6.0
    hostname: registrations2epics
    container_name: registrations2epics
    healthcheck:
      test: test $(ps | grep jaws | wc -l) -gt 1
      start_period: 30s
      start_interval: 5s
      #      interval: 30s      # waiting for https://github.com/docker/compose/issues/10830
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      jaws:
        condition: service_healthy
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY=http://registry:8081
