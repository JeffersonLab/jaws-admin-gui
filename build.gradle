plugins {
    id 'war'
    id ("com.github.node-gradle.node") version "3.2.1"
}

description 'Jefferson Lab Alarm Warning System (JAWS) web admin interface'
group 'org.jlab'
version '1.4.0'

// IndexDB Client-side cache data version
ext.cacheVersion = '1'

tasks.withType(JavaCompile) {
    options.release = 11
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

node {
    download = true
}

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }

    maven {
        url "https://s01.oss.sonatype.org/content/repositories/releases/"
    }
}

dependencies {
    if (project.hasProperty("provided")) {
        providedCompile 'org.jlab:jaws-libj:4.3.1',
                'io.confluent:kafka-streams-avro-serde:7.1.1',
                'com.fasterxml.jackson.core:jackson-databind:2.13.1',
                'org.tuckey:urlrewritefilter:4.0.4'
    } else {
        implementation 'org.jlab:jaws-libj:4.3.1',
                'io.confluent:kafka-streams-avro-serde:7.1.1',
                'com.fasterxml.jackson.core:jackson-databind:2.13.1',
                'org.tuckey:urlrewritefilter:4.0.4'
    }

    providedCompile 'javax:javaee-api:8.0.1',
            'javax.servlet:jstl:1.2'
}

tasks.register('prepareWebapp', Copy) {
    dependsOn("copyPage")
    dependsOn("copyToast")
    dependsOn("copyDexie")
    dependsOn("copySrc")
}

task packToast(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'pack-toast' ]
}

task packWorker(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'pack-worker' ]
    dependsOn(prepareWebapp)
}

task minifyPage(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'minify-page' ]
}

tasks.register("copyPage", Copy) {
    from layout.buildDirectory.file("page.min.mjs")
    into layout.buildDirectory.dir("webapp/resources/modules/page-1.11.6")
    dependsOn('minifyPage')
}

tasks.register("copyToast", Copy) {
    from layout.projectDirectory.file("node_modules/@toast-ui/editor/dist/toastui-editor.css")
    into layout.buildDirectory.dir("webapp/resources/modules/toast-ui-3.1.3")
    dependsOn('packToast')
}

tasks.register("copyDexie", Copy) {
    from layout.projectDirectory.file("node_modules/dexie/dist/modern/dexie.min.mjs")
    into layout.buildDirectory.dir("webapp/resources/modules/dexie-3.2.1")
    dependsOn('packToast')
}

tasks.register("copySrc", Copy) {
    from layout.projectDirectory.dir("src/main/webapp")
    include "**/*js"
    into layout.buildDirectory.dir("webapp")
    filesMatching('worker.mjs') {
        filter {
            String line -> line.replaceAll("-@VERSION@", "")
        }
    }
    filesMatching('resources/modules/jaws-admin-gui/db.mjs') {
        filter {
            String line -> line.replaceAll("@CACHE_VERSION@", cacheVersion)
        }
    }
}

war {
    dependsOn('packWorker')

    archiveFileName =  'jaws-admin-gui.war'
    filesMatching('WEB-INF/web.xml') {
        filter {
            String line -> line.replaceAll("@VERSION@", project.version)
        }
    }

    filesMatching('worker.mjs') {
        filter {
            String line -> line.replaceAll("@VERSION@", project.version)
        }
    }

    filesMatching('resources/modules/jaws-admin-gui/db.mjs') {
        filter {
            String line -> line.replaceAll("@CACHE_VERSION@", cacheVersion)
        }
    }

    from('build/page.min.mjs') {
        into('resources/modules/page-1.11.6')
    }

    from('node_modules/dexie/dist/modern/dexie.min.mjs') {
        into('resources/modules/dexie-3.2.1')
    }

    from('build/toastui-all.min.mjs') {
        into('resources/modules/toast-ui-3.1.3')
    }

    from('node_modules/@toast-ui/editor/dist/toastui-editor.css') {
        into('resources/css/toast-ui-3.1.3')
    }

    from('build/worker.js') {
    }
}

tasks.war.doLast {
    copy {
        from war
        into './run'
    }
}
